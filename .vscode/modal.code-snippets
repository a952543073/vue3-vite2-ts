{
  // Place your east-mas-ui 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log(\"$1\");",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to console": {
    "scope": "vue",
    "prefix": "modal",
    "body": [
      "<template>",
      "<BaseModal",
      "  ref=\"infoModal\"",
      "  :title=\"`${formType === 'add' ? '添加' : '修改'}账户`\"",
      "  :width=\"810\"",
      "  @ok=\"infoSubmit\"",
      ">",
      "  <a-form :model=\"formState\" style=\"padding: 0 40px\" v-bind=\"formLayout\">",
      "    <a-form-item label=\"状态\" name=\"status\" v-bind=\"validateInfos.status\">",
      "      <a-select",
      "        v-model:value=\"formState.status\"",
      "        placeholder=\"选择状态\"",
      "        :options=\"[",
      "          { label: '关闭', value: 1 },",
      "          { label: '开启', value: 2 },",
      "        ]\"",
      "      ></a-select>",
      "    </a-form-item>",
      "  </a-form>",
      "</BaseModal>",
      "</template>",
      "",
      "<script setup>",
      "import { toRaw, reactive, onMounted } from \"vue\"",
      "",
      "let infoModal = $ref(null)",
      "let formType = $ref(\"add\")",
      "",
      "const formLayout = { labelCol: { span: 8 }, wrapperCol: { span: 18 } }",
      "",
      "const formState = reactive({",
      "id: \"\",",
      "})",
      "",
      "const rulesRef = reactive({",
      "status: [{ required: true, message: \"请选择状态\" }],",
      "})",
      "",
      "import { Form } from \"ant-design-vue\"",
      "const useForm = Form.useForm",
      "const { resetFields, validate, validateInfos } = useForm(formState, rulesRef)",
      "",
      "import { USER, ROLE } from \"/@/api/sys.js\"",
      "import { message } from \"ant-design-vue\"",
      "",
      "onMounted(() => {})",
      "",
      "const show = data => {",
      "resetFields()",
      "if (data) {",
      "  formType = \"update\"",
      "  console.log(data)",
      "  Object.keys(formState).forEach(e => {",
      "    // console.log(e, data[e])",
      "    formState[e] = e === \"expireTime\" ? data[e]?.toString() : data[e]",
      "  })",
      "} else {",
      "  formType = \"add\"",
      "}",
      "infoModal.show()",
      "}",
      "const emit = defineEmits([\"submit\"])",
      "const addUser = async data => {",
      "const res = await USER[formType](data)",
      "if (!res.code) {",
      "  infoModal.hide()",
      "  emit(\"submit\")",
      "} else {",
      "  infoModal.loading(false)",
      "}",
      "}",
      "",
      "const infoSubmit = async () => {",
      "validate()",
      "  .then(res => {",
      "    console.log(res, toRaw(formState))",
      "    addUser(toRaw(formState))",
      "  })",
      "  .catch(err => {",
      "    console.log(\"error\", err)",
      "    infoModal.loading(false)",
      "  })",
      "}",
      "",
      "defineExpose({",
      "show,",
      "})",
      "</script>",
      "",
      "<style lang=\"less\" scoped></style>",
      ""
    ],
    "description": "弹窗模板"
  }
}
