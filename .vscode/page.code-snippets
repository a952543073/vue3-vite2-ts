{
  // Place your east-mas-ui 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log(\"$1\");",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print to vue": {
    "scope": "vue",
    "prefix": "page",
    "body": [
      "<template>",
      "  <div>",
      "    <a-skeleton v-if=\"showView===true\" active></a-skeleton>",
      "    <template v-else>",
      "    <section style=\"margin-bottom: 15px;\">",
      "      <BaseTitle label=\"主标题\" slabel=\"（副标题）\" />",
      "      <a-form :model=\"formState\" v-bind=\"formLayout\">",
      "        <a-row :gutter=\"[16, 0]\">",
      "          <a-col :span=\"12\">",
      "            <a-form-item label=\"名称\" v-bind=\"validateInfos.input__\">",
      "              <a-input v-model:value=\"formState.input__\" placeholder=\"请输入\" />",
      "            </a-form-item>",
      "          </a-col>",
      "        </a-row>",
      "      </a-form>",
      "    </section>",
      "",
      "      <BaseTable",
      "        :columns=\"columns\"",
      "        :dataSource=\"dataSource\"",
      "        :total=\"total\"",
      "        :current=\"formData.pageSize\"",
      "        :size=\"formData.pageNum\"",
      "        :loading=\"loading\"",
      "        @page=\"page\"",
      "      >",
      "        <template #title>",
      "          <BaseTitle label=\"表格头部\">",
      "            <div class=\"titleView\">",
      "              <a-input-search",
      "                v-model:value=\"formData.name\"",
      "                placeholder=\"请输入\"",
      "                style=\"width: 200px\"",
      "                @search=\"onSearch\"",
      "              />",
      "              <BaseButton",
      "                label=\"添加\"",
      "                type=\"primary\"",
      "                icon=\"icon-control_point\"",
      "                @click=\"showFormModal()\"",
      "              />",
      "            </div>",
      "          </BaseTitle>",
      "        </template>",
      "      </BaseTable>",
      "    </template>",
      "  </div>",
      "</template>",
      "",
      "<script setup>",
      "import { onMounted, reactive, toRaw } from \"vue\"",
      "import { message } from \"ant-design-vue\"",
      "",
      "/**表单 */",
      "let showView = $ref(true)",
      "const formLayout = { labelCol: { span: 8 }, wrapperCol: { span: 18 } }",
      "const formState = reactive({",
      "  input__: \"\",",
      "})",
      "const rulesRef = reactive({",
      "    input__: [{ required: true, message: \"请输入邮件地址\" }],",
      "})",
      "",
      "import { Form } from \"ant-design-vue\"",
      "const useForm = Form.useForm",
      "const { resetFields, validate, validateInfos } = useForm(formState, rulesRef)",
      "const infoSubmit = async () => {",
      "  validate()",
      "    .then(data => {",
      "      console.log(data,toRaw(formState))",
      "    })",
      "    .catch(err => {",
      "      console.log(\"error\", err)",
      "      infoModal.loading(false)",
      "    })",
      "}",
      "",
      "/** 表格 */",
      "// 搜索数据体",
      "let formData = $ref({ pageSize: 1, pageNum: 10, name: \"\" })",
      "let total = $ref(0)",
      "let loading = $ref(false)",
      "",
      "const columns = [",
      "  { title: \"邮箱地址\", dataIndex: \"emailAccount\", width: 150, ellipsis: true },",
      "  { title: \"邮箱地址\", dataIndex: \"emailAccount\", width: 150, ellipsis: true },",
      "  {",
      "    title: \"操作\",",
      "    dataIndex: \"operation\",",
      "    width: 47.5 * 2,",
      "    funs: [",
      "      { label: \"编辑\", fun: e => showFormModal(e) },",
      "      { label: \"删除\", fun: e => showDeleteModal(e) },",
      "    ],",
      "  },",
      "]",
      "",
      "let addModalDom = $ref(null)",
      "const showFormModal = async (e = null) => {",
      "  console.log(e ? \"修改弹窗\" : \"添加弹窗\", e)",
      "  if (e) {",
      "    const res = await ROLE.getById(e.id)",
      "    ",
      "    if (!res.code) {",
      "      addModalDom.show(res.data)",
      "    }",
      "  } else {",
      "    addModalDom.show()",
      "  }",
      "}",
      "",
      "let dataSource = $ref([])",
      "import { ARCHIVE } from \"/@/api/archive\"",
      "const getInfo = async () => {",
      "  loading = true",
      "  const res = await ARCHIVE.getList(toRaw(formData))",
      "  if (!res.code) {",
      "    dataSource = res.data.list",
      "    total = res.data.total",
      "    formData.pageSize = res.data.page",
      "    formData.pageNum = res.data.size",
      "    loading = false",
      "  } else {",
      "    dataSource = []",
      "    loading = false",
      "  }",
      "  showView = false",
      "  ",
      "}",
      "",
      "const onSearch = () => {",
      "  getInfo()",
      "  console.log(\"onSearch\", toRaw(formData))",
      "}",
      "const page = (pageSize, pageNum) => {",
      "  formData.pageSize = pageSize",
      "  formData.pageNum = pageNum",
      "  getInfo()",
      "}",
      "onMounted(() => {",
      "  getInfo()",
      "})",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      ".titleView > * + *{margin-left: 10px;} .title {margin-bottom: 14px;}",
      "</style>"
    ],
    "description": "模板界面"
  }
}
